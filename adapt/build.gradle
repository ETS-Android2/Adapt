apply plugin: 'com.android.library'

android {

    compileSdkVersion config['target-sdk']
    buildToolsVersion config['build-tools']

    defaultConfig {
        minSdkVersion config['min-sdk']
        targetSdkVersion config['target-sdk']
        versionCode 1
        versionName version

        // latest set of updates to build system (gradle, android-gradle plugin)
        //  stopped placing this value in `BuildConfig`, add manually
        buildConfigField 'String', 'VERSION_NAME', "\"$version\""
    }

    testOptions.unitTests.includeAndroidResources = true

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    api 'androidx.annotation:annotation:1.1.0'

    compileOnly deps['x-recycler-view']

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.8.0'

    // https://github.com/robolectric/robolectric
    testImplementation 'org.robolectric:robolectric:4.7.3'
}

final def isRelease = project.hasProperty('release')
final def isSnapshot = project.hasProperty('snapshot')

if (isRelease || isSnapshot) {
    final String version = project.property('VERSION_NAME')

    if (isRelease && version.contains('SNAPSHOT')) {
        throw new IllegalStateException("Release was requested, but VERSION_NAME contains 'SNAPSHOT': $version")
    }

    if (isSnapshot && !version.contains('SNAPSHOT')) {
        throw new IllegalStateException("Snapshot was requested, but VERSION_NAME does not contain 'SNAPSHOT': $version")
    }

    apply from: config['push-aar-gradle']

    tasks.withType(Javadoc) {
        enabled = false
    }
}