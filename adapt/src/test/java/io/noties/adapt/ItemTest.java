//package io.noties.adapt;
//
//import android.view.LayoutInflater;
//import android.view.ViewGroup;
//
//import androidx.annotation.NonNull;
//
//import org.junit.Before;
//import org.junit.Test;
//import org.junit.runner.RunWith;
//import org.robolectric.RobolectricTestRunner;
//import org.robolectric.annotation.Config;
//
//import static org.junit.Assert.assertEquals;
//
//@RunWith(RobolectricTestRunner.class)
//@Config(manifest = Config.NONE)
//public class ItemTest {
//
//    @Before
//    public void cleanStaticCache() {
//        Item.ViewTypeStore.CACHE.clear();
//        Item.ViewTypeStore.GENERATOR.set(0);
//    }
//
//    @Test
//    public void view_type_initialized() {
//        // each item must have valid viewType generated by default (always greater than 0)
//
//        assertEquals(1, new AbstractItem() {
//        }.viewType());
//
//        assertEquals(2, new AbstractItem() {
//        }.viewType());
//
//        assertEquals(3, new AbstractItem() {
//        }.viewType());
//    }
//
//    @Test
//    public void same_item_has_same_view_type() {
//        // viewType is consistent
//
//        final Item[] items = {
//                new AbstractItem() {
//                },
//                new AbstractItem() {
//                },
//                new AbstractItem() {
//                }
//        };
//
//        for (int i = 0; i < 22; i++) {
//            final int index = i % items.length;
//            assertEquals(Item.generatedViewType(items[index].getClass()), items[index].viewType());
//            assertEquals(index + 1, items[index].viewType());
//        }
//    }
//
//    private static class AbstractItem extends Item {
//
//        protected AbstractItem() {
//            super(0L);
//        }
//
//        protected AbstractItem(long id) {
//            super(id);
//        }
//
//        @NonNull
//        @Override
//        public Holder createHolder(@NonNull LayoutInflater inflater, @NonNull ViewGroup parent) {
//            return null;
//        }
//
//        @Override
//        public void render(@NonNull Holder holder) {
//
//        }
//    }
//}